using System;
using System.Collections.Generic;
using System.IO;

using Nustache.Core;
using YamlDotNet.Serialization;


namespace httplib.page {

//------------------------------------------------------------------------------
// NustachePage

[YamlRecord]
[HasLogging]
public class NustachePage: Page {

    protected override renderString(
        template: string, data: ObjectsType, parts: PartialsType = null): string {

        if(!String.IsNullOrEmpty(template)) {
            def objects = mergeDicts(Objects, data);
            Render.StringToString(template, objects, templateLocator(_, parts));
        } else {
            ""
        }
    }

    templateLocator(template: string, parts: PartialsType = null): Template {
        mutable result = null;
        mutable partial_to_use;
        def partials = mergeDicts(Partials, parts);

        _ = partials.TryGetValue(template, out partial_to_use);

        when(!String.IsNullOrEmpty(partial_to_use)) {
            result = Template(template);
            using(def reader = StringReader(partial_to_use)) {
                result.Load(reader);
            }
        }

        result;
    }
}


//------------------------------------------------------------------------------
// NustacheRenderer

public class NustacheRenderer: Renderer {

    public this(server: Server) {
        base(server);
    }

    public override PageType: Type {
        get { typeof(NustachePage) }
    }
}



} // namespace httplib
