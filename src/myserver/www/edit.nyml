---
# The following 3 meta tags *must* come first in the head; any other head content
# must come *after* these tags
Metas:
  - charset="utf-8"
  - http-equiv="X-UA-Compatible" content="IE=edge"
  - name="viewport" content="width=device-width, initial-scale=1"
Stylesheets:
  - /bootstrap-3.3.4-dist/css/bootstrap.css
  - /font-awesome-4.3.0/css/font-awesome.css
Title: Edit
Content: |
  <style>
    div pre, div textarea { margin-top: 10px; margin-bottom: 10px; }
  </style>
  <div class="container">
    <h1>Text edit example</h1>
    <p>Type some stuff into the editor, check out the preview...</p>
    <div class="col-md-6" style="background-color: #bdf; height: 250px;">
      <textarea autofocus id="input" style="width: 350px;"></textarea>
    </div>
    <div class="col-md-6" style="background-color: #dfb; height: 50px;">
      <pre><span id="transit"></span></pre>
    </div>
    <div class="col-md-6" style="background-color: #fdb; height: 200px;">
      <pre><span id="preview"></span></pre>
    </div>
  </div>
  <script src="/jquery-1.11.2/jquery-1.11.2.js"></script>
  <script src="/bootstrap-3.3.4-dist/js/bootstrap.js"></script>
  <script>
    function diffText(o, n) {
      if(o === n) {
        return { a: 0, b: 0, s: '' };
      }
      var ol = o.length;
      var nl = n.length;
      var ml = Math.min(ol, nl);
      var i = 0;
      var a, b, s;
      while(i < ml  && (o[i] === n[i])) {
        i++;
      }
      a = i;
      if(nl == ol) {
        var j = i;
        while(j < ml && (o[j] !== n[j])) {
          j++;
        }
        b = j;
        s = n.slice(i, j);
      } else if(nl > ol) {
        var j = (nl - 1), k = (ol - 1);
        while(j > i && k > i && (o[k] === n[j])) {
          j--;
          k--;
        }
        b = k+1;
        s = n.slice(i, j+1);

      } else { // nl < ol
        var j = nl, k = ol;
        while(j > i && k > i && (o[k] === n[j])) {
          j--;
          k--;
        }
        b = k;
        if(o[k] !== n[i]) {
          b++;
        }
        s = n.slice(i, (b-i));
      }
      return { a: a, b: b, s: s };
    }
    var oldText = "";
    function postText(e) {
      var text = $(this).val();
      if(text != oldText) {
        var obj = diffText(oldText, text);
        $("#transit").html(JSON.stringify(obj));

        $.ajax({
          type: 'POST',
          dataType: 'text',
          global: false,
          url: '/edit-do',
          data: 'a=' + obj.a + '&b=' + obj.b + '&s='+encodeURIComponent(obj.s),
          success: function(data) {
            $("#preview").html(data);
          }
        });
        oldText = text;
      }
    }
    $("#input").on("input", postText);
    $.ajax({
      type: 'POST',
      dataType: 'text',
      global: false,
      url: '/edit-do',
      data: 'a=0&b=0&s=',
      success: function(data) {
        $("#preview").html(data);
      }
    });
  </script>
Partials:
Objects:
