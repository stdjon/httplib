using System;
using System.Threading;

using httplib;


namespace forum {

public class ForumEventListener: ServerEventListener {

    public Response: Response { get; private set; }
    public Id: int { get; private set; }
    public UserId: uint { get; private set; }

    public this(
        src: ServerEventSource, channel: string, user_id: uint, res: Response) {

        base(src, channel);
        UserId = user_id;
        Response = res;
        Id = 0;
    }

    public override onEvent(j: JsonObject): void {

        def json = JsonObject(j);
        json["time"] = Date.NowTicks.ToString();

        def ok = Response.withNetworkLoss(() => {
            // For now, try 3 times to send an individual update, then give up.
            // Wait for around 100ms between attempts to see if the failure
            // resolves itself in that time...
            // (This could end up moving into the framework at a later date...)
            mutable tries = 3;
            mutable done = false;
            while(!done && tries > 0) {
                try {
                    Response.append($"id: $Id\nevent: $Channel\ndata: $json\n\n");
                    Id++;
                    done = true;
                } catch {
                    // TODO: we may want to check for a SocketException inside
                    //   the IOException...
                    | ex is IO.IOException => {
                        tries--;
                        def inex = ex.InnerException;
                        Log.w("ForumEventListener.onEvent IOException: "
                            "({0} \"{1}\") ({2} attempts left)",
                            inex.GetType(), inex.Message, tries);
                        Thread.Sleep(100);
                    }
                }
            }
        });
        when(!ok) {
            Dispose();
        }
    }
}


}
