using System;

using Nemerle.Extensions;

using httplib;


namespace forum {

[HasHandlerFactory]
public class NewThreadHandler: BasePageHandler {

    public this(hd: HandlerData, path: string) {
        base(hd, path);
    }

    public override callback(): void {

        // If user is not authorized, redirect to index page.
        // (There is nothing which can be done here by unauthorized visitors.)
        if(userIsAuthorized()) {
            base.callback();
        } else {
            Response["Location"] = $"$(Server.getDefaultPrefix(Request))/";
            Response.Status = (303, "See Other");
        }
    }

    protected userIsAuthorized(): bool {
        SignedInUserId > 0;
    }

    public override initialize(): void {
        base.initialize();

        using(db = Server.openDatabase()) {

            def cat = Context.Vars["category"];
            when(!String.IsNullOrEmpty(cat)) {
                def catid = UInt32.Parse(cat);
                PageData["CategoryId"] = catid;

                def command = db.createCommand(
                    "SELECT Name FROM Categories WHERE Id = @Id") <- [
                        "@Id" = catid,
                    ];
                def catname = command.executeScalar() :> string;
                PageData["Category"] = catname;
            }

            def command2 = db.createCommand(
                "SELECT Transform FROM Users WHERE Id = @Id") <- [
                    "@Id" = SignedInUserId
                ];
            def transform = command2.executeScalar() :> string;

            match(transform) {
                | "bbcode" => PageData["BbCodeActive"] = "active"
                | "textile" => PageData["TextileActive"] = "active"
                | "htmlsan" => PageData["HtmlSanActive"] = "active"
                | _ => {}
            }
        }
    }
}


} // forum.hnd
