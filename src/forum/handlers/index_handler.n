using System;
using System.Text.RegularExpressions;

using Nemerle.Extensions;

using httplib;


namespace forum {

[HasHandlerFactory]
public class IndexHandler: BasePageHandler {

    public this(hd: HandlerData, path: string) {
        base(hd, path);
    }

    public override initialize(): void {
        base.initialize();

        mutable threads = array(10);
        mutable posts = array(10);
        mutable stars = array(10);
        mutable i;

        def command = Database.createCommand(
            "SELECT Id, Title, CreateDate FROM Threads "
                " ORDER BY CreateDate DESC LIMIT 0, 10");

        i = command.execute((j, reader) => {
            threads[j] = PageData() <- [
                "Id" = reader.getValue("Id", 0U),
                "Title" = reader.getValue("Title"),
                "CreateDate" = Date.FromTicks(reader.getValue("CreateDate", 0L)),
            ];
        });
        Array.Resize(ref threads, i);

        def prefix = Server.getDefaultPrefix(Request);
        for(mutable j = 0; j < threads.Length; j++) {
            def thread_id = threads[j]["Id"] :> uint;
            def path = ForumDatabase.getThreadUrlPath(thread_id);
            threads[j]["ThreadUrl"] = $"$prefix$path";
        }

        def command2 = Database.createCommand(
            "SELECT Id, OutputContent, CreateDate FROM Posts "
                "ORDER BY CreateDate DESC LIMIT 0, 10");

        i = command2.execute((j, reader) => {
            mutable content = reader.getValue("OutputContent");

            posts[j] = PageData() <- [
                "Id" = reader.getValue("Id", 0U),
                "Content" = summarizePost(content),
                "CreateDate" = Date.FromTicks(reader.getValue("CreateDate", 0L)),
            ];
        });
        Array.Resize(ref posts, i);

        mutable s = array(10);
        def command4 = Database.createCommand(
            "SELECT PostId FROM Bookmarks ORDER BY Id DESC LIMIT 0, 10");
        i = command4.execute((j, reader) => {
            s[j] = reader.getValue("PostId", 0U);
        });
        Array.Resize(ref s, i);
        Array.Resize(ref stars, i);

        for(mutable j = 0; j < s.Length; j++) {
            def command5 = Database.createCommand(
                "SELECT UserId, OutputContent, CreateDate FROM Posts WHERE "
                    "Id = @Id") <- [
                "@Id" = s[j],
            ];

            command5.execute(reader => {
                def content = reader.getValue("OutputContent");

                stars[j] = PageData() <- [
                    "Id" = s[j],
                    "UserId" = reader.getValue("UserId", 0U),
                    "Content" = summarizePost(content),
                    "CreateDate" = Date.FromTicks(reader.getValue("CreateDate", 0L)),
                ];
            });

            when(stars[j] != null) {
                def id = stars[j]["UserId"] :> uint;
                def command6 = Database.createCommand(
                    "SELECT Name FROM Users WHERE Id = @Id") <- [
                        "@Id" = id,
                    ];
                stars[j]["User"] = command6.executeScalar() :> string;
                stars[j]["UserDisplay"] = userDisplayName(id);
            }
        }

        _ = PageData <- [
            "Threads" = threads,
            "Posts" = posts,
            "Stars" = stars,
        ];
    }
}


} // forum.hnd
