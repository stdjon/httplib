using System;

using httplib;

using Nemerle.Extensions;


namespace forum {

[HasHandlerFactory]
public class TokenHandler: BasePageHandler {

    Method: HTTP { get; private set; }

    public this(hd: HandlerData, method: HTTP) {
        base(hd, null);

        Method = method;
        PageData["IsToken"] = true;
    }

    public override callback(): void {

        def action = Context.Vars["action"];
        def not_allowed_response =
            () => Server.methodNotAllowedResponse(Context, Request, Response);

        def lambda = match(Method, action) {
            | (HTTP.POST, "set") => tokSetResponse
            | (HTTP.POST, "check") => tokCheckResponse
            | _ => not_allowed_response
        }

        lambda();
    }

    public tokSetResponse(): void {

        if(Request.IsSecure) {
            def t = Context.Vars["t"];

            def tmp = Server.getUserIdFromSessionToken(STOK.TEMPORARY, t);
            def chk = (tmp == 0);
            def id = Server.getUserIdFromCookie(Request, STOK.SECURE);
            mutable ok = false;

            when(chk && id != 0) {
                def (ok2, t, _x) =
                    Server.registerSessionToken(STOK.TEMPORARY, id);

                when(ok2) {
                    Response.append(t);
                    ok = true;
                }
            }
            if(ok) {
                Response.Status = (200, "OK");
            } else {
                Server.internalServerErrorResponse(Context, Request, Response);
            }
        } else {
            Response.Status = (403, "Forbidden");
        }
    }

    public tokCheckResponse(): void {

        def t = Context.Vars["t"];
        def id = Server.getUserIdFromSessionToken(STOK.TEMPORARY, t);
        mutable ok = false;

        when(id > 0) {
            def (ok2, t, x) = Server.registerSessionToken(STOK.INSECURE, id);

            when(ok2) {
                Response.Cookies.add("_isession", t, x, COOKIE.HTTP_ONLY);
                ok = true;
            }
        }

        if(ok) {
            Response.Status = (200, "OK");
        } else {
            Server.internalServerErrorResponse(Context, Request, Response);
        }
    }

}


} // forum
