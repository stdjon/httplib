using System;
using System.Text.RegularExpressions;

using Nemerle.Extensions;

using httplib;


namespace forum {

[HasHandlerFactory]
public class UserListHandler: BasePageHandler {

    public UsersPerPage: int { get; }
    public Transform: string { get; private set; }
    public Font: string { get; private set; }
    public MonoFont: string { get; private set; }

    public this(hd: HandlerData, path: string) {
        base(hd, path);
        UsersPerPage = Server.Configuration.Limits.UsersPerPage;
    }


    public override initialize(): void {
        base.initialize();
        initializeUsers();
    }

    initializeUsers(): void {

        def fromstr = Context.Vars["from"];
        def from = fromstr ? Int32.Parse(fromstr) : 1;
        def tostr = Context.Vars["to"];
        def to = tostr ? Int32.Parse(tostr) : UsersPerPage;
        def dist = to + 1 - from;
        mutable users: PageDataArray = array(dist);
        mutable i = 0;

        def command = Database.createCommand(
            "SELECT Id, Name, Level, Points, Motto, Colour FROM Users "
                "ORDER BY Name LIMIT @From, @Count") <- [
                "@From" = from - 1,
                "@Count" = dist,
            ];

        i = command.execute((j, reader) => {
            def u = reader.getValue("Name");
            when(u != null) {
                def id = reader.getValue("Id", 0U);
                def points = reader.getValue("Points", 0);
                def level = reader.getValue("Level", 0.0f);
                def motto = reader.getValue("Motto", "");
                def colour = reader.getValue("Colour",
                    Server.Configuration.DefaultColourClass);
                users[j] = PageData() <- [
                    "Id" = id,
                    "Num" = (from + j).ToString(),
                    "Name" = u,
                    "Points" = points.ToString(),
                    "Level" = level.ToString("f2"),
                    "Motto" = motto,
                    "ColourBgHsl" = CssHandler.bgFromColourId(colour),
                    "ColourFgHsl" = CssHandler.fgFromColourId(colour),
                ];
            }
        });

        when(i < dist) {
            Array.Resize(ref users, i);
        }

        for(mutable j = 0; j < users.Length; j++) {
            users[j]["Display"] = userDisplayName(users[j]["Id"] :> uint);
        }

        def prf = Server.getDefaultPrefix(Request);
        def user_count = ForumDatabase.getUserCount();

        addPagination(PageData,
            user_count, dist, UsersPerPage,
            from, to, $"$prf/u");

        _ = PageData <- [
            "Users" = users,
            "Markers" = buildMarkerList(from, i),
        ];
    }
}


} // forum

